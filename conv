%define true  1
%define false 0
%define null  0

; These registers are reserved for the runtime and must not be mutated by users.
%define ttq_r15 r15  ; A thread's task queue.
%define cet_r14 r14  ; A thread's currently executing task.

; Procedure call arguments, including return-instruction (continuation) as last
; argument.  These can also used as local variables.
%define arg1_r8   r8
%define arg2_r9   r9
%define arg3_r10  r10
; r11 isn't used because of its implicit use with syscall/sysret.
%define arg4_r12  r12
%define ret_r13   r13


%macro jmp_ret %1
  mov ret_r13, %%continuation
  jmp %1
  %%continuation:
%encmacro


struc task
  .block:  resb block_size
  .rcvr:   resq 1
  .ridx:   resq 1
  .need:   resq 1
  .arg:
  .exec:   resq 1
  ; From here, tasks have varying lengths.
endstruc

%assign task.arg1 task.arg + 8
%assign task.arg2 task.arg + 16
%assign task.arg3 task.arg + 24

struc block
  .queue_node:  resb queue_node_size
  .group:       resq 1
endstruc

; The order of the queue strucs' fields is required for the cmpxchg16b
; techniques.

; TODO: Instances of the queue strucs must be aligned at 8-byte, so that loads
; and stores are atomic.

struc queue
  .head: resq 1
  .tail: resq 1
  .next: resq 1
endstruc

struc queue_node
  .head_of: resq 1
  .locked:  resq 1
  .tail_of: resq 1
  .next:    resq 1
endstruc
